//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------
using UnityEngine;
using System.Collections.Generic;
using System;
using System.Linq;
using System.IO;
using DreamFaction.GameCore;
using DreamFaction.LogSystem;

public class TableReader ///: IEnumerator
{
    private Dictionary<int, IExcelBean> m_Data = new Dictionary<int, IExcelBean>();
    private Dictionary<string, IExcelBean> m_StringData = new Dictionary<string, IExcelBean>();
    private List<IExcelBean> m_DataList = new List<IExcelBean>();//方便高效的多条件遍历 [10/22/2015 Zmy]
    
    public Dictionary<int, IExcelBean> getData()
    {
        return m_Data;
    }
    public List<IExcelBean> getDataList()
    {
        return m_DataList;
    }

    public int getDataCount() { return m_Data.Count; }
    public int getChsCount() { return m_StringData.Count; }
    public bool tableContainsKey(int nKey)
    {
        return m_Data.ContainsKey(nKey);
    }
    public bool tableContainsKey(string strKey)
    {
        return m_StringData.ContainsKey(strKey);
    }
    public IExcelBean getTableData(int nKey)
    {
        if (m_Data.ContainsKey(nKey) == false)
        {
            LogManager.LogError("!!!!!!!Error:  Table ContainsKey is false :" + nKey);
            LogManager.LogToFile("!!!!!!!Error: Table ContainsKey is false :" + nKey);
            return null;
        }
        else
        {
            return m_Data[nKey];
        }
    }

    public IExcelBean getTableData(string strKey)
    {
        if (string.IsNullOrEmpty(strKey))
        {
            LogManager.LogError("!!!!!!!Error: 05_chstext table string Key is NullorEmpty");
            return null;
        }

        if (m_StringData.ContainsKey(strKey) == false)
        {
            LogManager.LogError("!!!!!!!Error: Table strKey is false :" + strKey);
            LogManager.LogToFile("!!!!!!!Error: Table strKey is false :" + strKey);
            return null;
        }
        else
        {
            return m_StringData[strKey];
        }
    }
      public void LoadBinary(string fileName, byte[] array, Type type ,bool isstring = false ) //二进制加载
    {
        MemoryStream nStream = new MemoryStream(array);
        BinaryReader nReader = new BinaryReader(nStream);
               
        try
        {
            while (nReader.PeekChar() != -1)
            {
                var obj = (IExcelBean)Activator.CreateInstance(type);
                obj.parser(nReader);
                if (isstring)
                {
                    if (m_StringData.ContainsKey(obj.GetStringID()) == false)
                    {
                        m_StringData.Add(obj.GetStringID(), obj);
                    }
                    else
                    {
                        Debug.LogError("!!!!!!!Error:  StringTable ContainsKey is same Value " + fileName + "---key:" + obj.GetStringID());
                    }
                    
                }
                else
                {
                    if (m_Data.ContainsKey(obj.GetID()) == false)
                    {
                        m_Data.Add(obj.GetID(), obj);
                        m_DataList.Add(obj);
                    }
                    else
                    {
                        Debug.LogError("!!!!!!!Error:  DataTable ContainsKey is same Value " + fileName + "---key:" + obj.GetID());
                    }
                }
            }
              
        }
        catch (EndOfStreamException ex)
        {
            // 读到末尾
            Debug.LogError(ex.Message + fileName);
        }
        finally
        {
            nStream.Close();
            nReader.Close();
        }

    }
 
    public List<int> GetDataKeys()
    {
        return m_Data.Keys.ToList<int>();
    }

}
