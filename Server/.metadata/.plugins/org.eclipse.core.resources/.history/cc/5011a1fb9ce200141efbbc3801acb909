package chuhan.gsp.award;

import java.text.ParseException;
import java.util.ArrayList;

import java.util.List;
import java.util.Map;
import java.util.TreeMap;

import chuhan.gsp.item.innerdrop16;
import chuhan.gsp.item.normaldrop15;
import chuhan.gsp.main.ConfigManager;

import chuhan.gsp.util.ParserString;

public class DropManager {
	public static DropManager instance = new DropManager();
	private DropManager() {

	}

	public static DropManager getInstance() {

		return instance;
	}
	
	public static void reload() throws Exception
	{
		DropManager newInstance = new DropManager();
		newInstance.init();
		instance = newInstance;
	}
	
	public void init() throws ParseException
	{
		
	}
	
	
	public List<Integer> getInDpListByNmId(int normalDropId){
		normaldrop15 nmdrop = ConfigManager.getInstance().getConf(normaldrop15.class).get(normalDropId);
		if(nmdrop == null){
			return null;
		}
		String indrop = nmdrop.getInnerdrop();
		//全掉落
		if(nmdrop.getNormaldroptype() == 1){
			return ParserString.parseString2Int(indrop);
		}
		
		List<Integer> allDrop = ParserString.parseString2Int(indrop);
		List<Integer> allProb = ParserString.parseString2Int(nmdrop.getInnerdropprob());
		if(allDrop.size() != allProb.size())
			return null;
		//根据几率掉落
		if(nmdrop.getNormaldroptype() == 2){
			
		}
		return null；
	}
	
	
	/**
	 * 获取掉落小包组
	 * @param innerdropId
	 * @return
	 */
	public List<innerdrop16> getInDpListByInDpId(int innerdropId){
		List<innerdrop16> result = new ArrayList<innerdrop16>();
		TreeMap<Integer,innerdrop16> treeMap = ConfigManager.getInstance().getConf(innerdrop16.class);
		for(Map.Entry<Integer, innerdrop16> entry : treeMap.entrySet()){
			if(entry.getValue().getInnerdropid() == innerdropId){
				result.add(entry.getValue());
			}
		}
		return result;
	}
	
	
	
	//根据比例计算掉落
	public int getDropId(java.util.HashMap<Integer,DropInit> dropMap)
	{
		int[] percentlist = new int[dropMap.size()];
		int i = 0;
		for (java.util.Map.Entry<Integer, DropInit> drop : dropMap.entrySet()) {
			percentlist[i++] = drop.getValue().percent;
		}
		int dropnum = chuhan.gsp.util.Misc.getProbability(percentlist);
		if(dropnum == -1)
			return 0;
		DropInit drop = dropMap.get(dropnum);
		if(drop == null)
			return 0;
		
		return drop.id;
	}
	
	public class DropInit
	{
		final int percent;
		final int id;
		DropInit(int percent, int id)
		{
			this.percent = percent;
			this.id = id;
		}
	}
	
}
