package chuhan.gsp.award;

import java.util.List;

import chuhan.gsp.Dictionary;
import chuhan.gsp.ErrorType;
import chuhan.gsp.MsgType;
import chuhan.gsp.SErrorType;
import chuhan.gsp.attr.PropRole;
import chuhan.gsp.mail.PAddMail;
import chuhan.gsp.msg.Message;
import chuhan.gsp.util.ParserString;




public class PDrop extends xdb.Procedure{
	private final long roleid;
	private final String dropStr;
	private final String reason;
	
	
	public PDrop(long roleid, String dropStr, String reason) {
		this.roleid = roleid;
		this.dropStr = dropStr;
		this.reason = reason;
	}
	
	
	@Override
	protected boolean process() throws Exception {
		
		xbean.Properties xprop = xtable.Properties.get(roleid);
		if(xprop == null)
		{
//			ErrorManager.getInstance().SendError(roleid, ErrorType.ERR_NOT_ONLINE);
			return false;
		}
		
		List<Integer> nmDropIdList = ParserString.parseString2Int(dropStr);
		
		//判断是否走邮件
		chuhan.gsp.attr.PropRole proprole = chuhan.gsp.attr.PropRole.getPropRole(roleid, false);
		if(proprole.getMaxHeroSize() <= herocol.getxcolumn().getHeroes().size())
		{
			java.util.LinkedList<Integer> herolist = new java.util.LinkedList<Integer>();
			herolist.addFirst(heroId);
			PAddMail paddmail = new PAddMail(roleid,Dictionary.SYS_TITLE,SYS_DEFAULT,
					0,0,herolist,null,0,0);
			paddmail.call();
			return true;
		}
		xbean.Hero xhero = Hero.createHero(heroId, herolevel);
		if(xhero == null)
		{
			xdb.Procedure.psend(roleid, new SErrorType(ErrorType.ERR_NOT_RIGHT_HERO));
			return false;
		}
		
		Hero hero = herocol.addHero(xhero);
		herokey = hero.getxHeroInfo().getKey();
		psendWhileCommit(roleid, new SRefreshHero(hero.getProtocolHero()));
				
		return true;
	}
	
}
